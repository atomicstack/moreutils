Description: ifdata: consistent error message on non-exist netdev
Author: Nicolas Schier <nicolas@hjem.rpa.no>
Bug-Debian: https://bugs.debian.org/386754
Origin: upstream
Forwarded: yes
Last-Update: <2015-03-30>

--- moreutils-0.55.orig/ifdata.c
+++ moreutils-0.55/ifdata.c
@@ -1,3 +1,4 @@
+#include <error.h>
 #include <stdlib.h>
 #include <sys/types.h>
 #include <sys/socket.h>
@@ -127,8 +128,14 @@ static int do_socket_ioctl(const char *ifname, const unsigned long int request,
 	if ((res = ioctl(sock, request, req)) == -1) {
 		if (ioctl_errno)
 			*ioctl_errno = errno;
-		if (print_error == PRINT_ERROR)
-			fprintf(stderr, "ioctl on %s: %s\n", ifname, strerror(errno));
+		if (print_error == PRINT_ERROR) {
+			if (errno == ENODEV)
+				error(EXIT_FAILURE, 0,
+				      "No such network interface: %s", ifname);
+			else
+				fprintf(stderr, "ioctl on %s: %s\n", ifname,
+					strerror(errno));
+		}
 		close(sock);
 		return 1;
 	}
@@ -375,15 +382,24 @@ struct if_stat *ifstats, *ifstats2 = NULL;
 
 void please_do(int ndo, int *todo, const char *ifname) {
 	int i;
+	int exists;
 	static struct ifreq req;
 	if (!ndo) return;
+
+	exists = if_exists(ifname);
+
 	// printf("I have %d items in my queue.\n",ndo);
 	for (i=0; i<ndo; i++) {
+		if (!exists &&
+		    (todo[i] != DO_EXISTS) && (todo[i] != DO_PEXISTS))
+			error(EXIT_FAILURE, 0, "No such network interface: %s",
+			      ifname);
+
 		switch (todo[i]) {
 			case DO_EXISTS:
-				exit(!if_exists(ifname));
+				exit(!exists);
 			case DO_PEXISTS:
-				printf("%s", if_exists(ifname) ? "yes" : "no");
+				printf("%s", exists ? "yes" : "no");
 				break;
 			case DO_PADDRESS:
 				print_addr(if_addr(ifname, &req));
